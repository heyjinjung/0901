{
  "openapi": "3.1.0",
  "info": {
    "title": "Casino-Club F2P API",
    "description": "Backend API for Casino-Club F2P gaming platform",
    "version": "1.0.0"
  },
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": [
          "Authentication",
          "Authentication"
        ],
        "summary": "Signup",
        "operationId": "signup_api_auth_signup_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Authentication",
          "Authentication"
        ],
        "summary": "Login",
        "operationId": "login_api_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/admin/login": {
      "post": {
        "tags": [
          "Authentication",
          "Authentication"
        ],
        "summary": "Admin Login",
        "operationId": "admin_login_api_auth_admin_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminLogin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/refresh": {
      "post": {
        "tags": [
          "Authentication",
          "Authentication"
        ],
        "summary": "Refresh",
        "operationId": "refresh_api_auth_refresh_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Body_refresh_api_auth_refresh_post"
                  }
                ],
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": [
          "Authentication",
          "Authentication"
        ],
        "summary": "Logout",
        "operationId": "logout_api_auth_logout_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/users/profile": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get Profile",
        "description": "현재 로그인한 사용자 프로필 조회",
        "operationId": "get_profile_api_users_profile_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__user__UserResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update User Profile",
        "description": "Update user profile",
        "operationId": "update_user_profile_api_users_profile_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/users/balance": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User Balance",
        "description": "사용자 잔액 조회",
        "operationId": "get_user_balance_api_users_balance_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/users/info": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User Info",
        "description": "사용자 상세 정보 조회",
        "operationId": "get_user_info_api_users_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/users/stats": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User Stats",
        "description": "Get user statistics",
        "operationId": "get_user_stats_api_users_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserStatsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/users/tokens/add": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Add Tokens",
        "description": "Add tokens to user account (admin or special purposes)",
        "operationId": "add_tokens_api_users_tokens_add_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Amount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{user_id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User",
        "description": "특정 사용자 정보 조회",
        "operationId": "get_user_api_users__user_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__user__UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/stats": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get Admin Stats",
        "description": "Get admin statistics",
        "operationId": "get_admin_stats_api_admin_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminStatsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/admin/users": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "List Users",
        "operationId": "list_users_api_admin_users_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 20,
              "title": "Page Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/notifications/send": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Send Notification",
        "description": "Send a notification to a specific user via WebSocket.",
        "operationId": "send_notification_api_admin_notifications_send_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminNotificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/admin/notifications/broadcast": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Broadcast Notification",
        "description": "Broadcast a notification to all connected users via WebSocket.",
        "operationId": "broadcast_notification_api_admin_notifications_broadcast_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminNotificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/admin/rewards/grant-bulk": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Grant Rewards Bulk",
        "description": "Grant rewards to many users in one call. Returns per-user results.",
        "operationId": "grant_rewards_bulk_api_admin_rewards_grant_bulk_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkRewardRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkRewardResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/admin/users/{user_id}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get User Detail",
        "operationId": "get_user_detail_api_admin_users__user_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Admin"
        ],
        "summary": "Patch User",
        "operationId": "patch_user_api_admin_users__user_id__patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Payload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/{user_id}/activities": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get User Activities",
        "operationId": "get_user_activities_api_admin_users__user_id__activities_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "User Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 20,
              "title": "Page Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/{user_id}/ban": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Ban User",
        "description": "Ban a user",
        "operationId": "ban_user_api_admin_users__user_id__ban_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBanRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/{user_id}/unban": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Unban User",
        "description": "Unban a user",
        "operationId": "unban_user_api_admin_users__user_id__unban_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/{user_id}/tokens/add": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Add User Tokens",
        "description": "Add tokens to a user account (admin only)",
        "operationId": "add_user_tokens_api_admin_users__user_id__tokens_add_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Amount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/events/": {
      "get": {
        "tags": [
          "Admin Events"
        ],
        "summary": "List Events",
        "operationId": "list_events_api_admin_events__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Q"
            }
          },
          {
            "name": "active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Active"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventResponse"
                  },
                  "title": "Response List Events Api Admin Events  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin Events"
        ],
        "summary": "Create Event",
        "operationId": "create_event_api_admin_events__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/events/{event_id}": {
      "put": {
        "tags": [
          "Admin Events"
        ],
        "summary": "Update Event",
        "operationId": "update_event_api_admin_events__event_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Event Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin Events"
        ],
        "summary": "Delete Event",
        "operationId": "delete_event_api_admin_events__event_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/events/{event_id}/publish": {
      "post": {
        "tags": [
          "Admin Events"
        ],
        "summary": "Publish Event",
        "operationId": "publish_event_api_admin_events__event_id__publish_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Event Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PublishRequest"
                  }
                ],
                "default": {
                  "is_active": true
                },
                "title": "Payload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/missions/": {
      "get": {
        "tags": [
          "Admin Missions"
        ],
        "summary": "List Missions",
        "operationId": "list_missions_api_admin_missions__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Q"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Type"
            }
          },
          {
            "name": "active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Active"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MissionResponse"
                  },
                  "title": "Response List Missions Api Admin Missions  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin Missions"
        ],
        "summary": "Create Mission",
        "operationId": "create_mission_api_admin_missions__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MissionCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MissionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/missions/{mission_id}": {
      "put": {
        "tags": [
          "Admin Missions"
        ],
        "summary": "Update Mission",
        "operationId": "update_mission_api_admin_missions__mission_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "mission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Mission Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MissionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MissionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin Missions"
        ],
        "summary": "Delete Mission",
        "operationId": "delete_mission_api_admin_missions__mission_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "mission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Mission Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/missions/{mission_id}/activate": {
      "post": {
        "tags": [
          "Admin Missions"
        ],
        "summary": "Set Mission Active",
        "operationId": "set_mission_active_api_admin_missions__mission_id__activate_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "mission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Mission Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ActivateRequest"
                  }
                ],
                "default": {
                  "is_active": true
                },
                "title": "Payload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MissionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/actions/actions": {
      "post": {
        "tags": [
          "Game Actions",
          "Game Actions",
          "actions"
        ],
        "summary": "Create Action",
        "description": "Logs an action and publishes it to Kafka.\nFor now, this is a simplified stub.\nReplace user_id and action_type with a Pydantic model (e.g., schemas.ActionCreate) later.",
        "operationId": "create_action_api_actions_actions_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "action_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Action Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rewards/users/{user_id}/rewards": {
      "get": {
        "tags": [
          "Rewards",
          "Rewards",
          "Rewards"
        ],
        "summary": "Get User Rewards",
        "description": "Retrieves a paginated list of rewards for a specific user.",
        "operationId": "get_user_rewards_api_rewards_users__user_id__rewards_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "The ID of the user to get rewards for"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number, 1-indexed",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number, 1-indexed"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of items per page",
              "default": 20,
              "title": "Page Size"
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedRewardsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rewards/distribute": {
      "post": {
        "tags": [
          "Rewards",
          "Rewards",
          "rewards"
        ],
        "summary": "Distribute Reward To User",
        "description": "Distributes a specific reward to a user.\nThis is the central endpoint for granting rewards from games or events.",
        "operationId": "distribute_reward_to_user_api_rewards_distribute_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RewardDistributionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardItem"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/shop/purchase": {
      "post": {
        "tags": [
          "Shop",
          "Shop"
        ],
        "summary": "Purchase Item",
        "description": "Purchase shop item using user's gold tokens",
        "operationId": "purchase_shop_item_api_shop_purchase_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopPurchaseRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopPurchaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/missions/": {
      "get": {
        "tags": [
          "Events & Missions"
        ],
        "summary": "Get User Missions",
        "description": "Get the list of active missions and the current user's progress.",
        "operationId": "get_user_missions_api_missions__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/missions/{mission_id}/claim": {
      "post": {
        "tags": [
          "Events & Missions"
        ],
        "summary": "Claim Mission Reward",
        "description": "Claim the reward for a completed mission.",
        "operationId": "claim_mission_reward_api_missions__mission_id__claim_post",
        "parameters": [
          {
            "name": "mission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Mission Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/quiz/{quiz_id}": {
      "get": {
        "tags": [
          "quiz"
        ],
        "summary": "Get Quiz Details",
        "description": "Get the details, questions, and answers for a specific quiz.",
        "operationId": "get_quiz_details_quiz__quiz_id__get",
        "parameters": [
          {
            "name": "quiz_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Quiz Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/quiz/{quiz_id}/submit": {
      "post": {
        "tags": [
          "quiz"
        ],
        "summary": "Submit Quiz Answers",
        "description": "Submit answers for a quiz and get the resulting risk profile.",
        "operationId": "submit_quiz_answers_quiz__quiz_id__submit_post",
        "parameters": [
          {
            "name": "quiz_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Quiz Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnswerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/chat/status/{user_id}": {
      "get": {
        "tags": [
          "chat"
        ],
        "summary": "Get Connection Status",
        "description": "Check if user has an active WebSocket connection.",
        "operationId": "get_connection_status_api_chat_status__user_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Connection Status Api Chat Status  User Id  Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ai/recommendations": {
      "get": {
        "tags": [
          "AI Recommendation",
          "AI Recommendation"
        ],
        "summary": "Get User Recommendations",
        "description": "Get AI recommendation list",
        "operationId": "get_user_recommendations_api_ai_recommendations_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "recommendation_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Recommendation Type"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": "pending",
              "title": "Status"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRecommendationResponse"
                  },
                  "title": "Response Get User Recommendations Api Ai Recommendations Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ai/recommendations/generate": {
      "post": {
        "tags": [
          "AI Recommendation",
          "AI Recommendation"
        ],
        "summary": "Generate Recommendations",
        "description": "AI �KOREAN_TEXT_REMOVED KOREAN_TEXT_REMOVED�KOREAN_TEXT_REMOVED",
        "operationId": "generate_recommendations_api_ai_recommendations_generate_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "recommendation_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Recommendation Type"
            }
          },
          {
            "name": "max_recommendations",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 20,
              "minimum": 1,
              "default": 5,
              "title": "Max Recommendations"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRecommendationResponse"
                  },
                  "title": "Response Generate Recommendations Api Ai Recommendations Generate Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ai/recommendations/{recommendation_id}/interact": {
      "post": {
        "tags": [
          "AI Recommendation",
          "AI Recommendation"
        ],
        "summary": "Record Recommendation Interaction",
        "description": "�KOREAN_TEXT_REMOVED KOREAN_TEXT_REMOVED�KOREAN_TEXT_REMOVED�KOREAN_TEXT_REMOVED �KOREAN_TEXT_REMOVED",
        "operationId": "record_recommendation_interaction_api_ai_recommendations__recommendation_id__interact_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "recommendation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Recommendation Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecommendationInteractionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendationInteractionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ai/preferences": {
      "get": {
        "tags": [
          "AI Recommendation",
          "AI Recommendation"
        ],
        "summary": "Get User Preferences",
        "description": "KOREAN_TEXT_REMOVED�KOREAN_TEXT_REMOVED�KOREAN_TEXT_REMOVED�KOREAN_TEXT_REMOVED",
        "operationId": "get_user_preferences_api_ai_preferences_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPreferenceResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "AI Recommendation",
          "AI Recommendation"
        ],
        "summary": "Update User Preferences",
        "description": "KOREAN_TEXT_REMOVED�KOREAN_TEXT_REMOVED�KOREAN_TEXT_REMOVED�KOREAN_TEXT_REMOVED�KOREAN_TEXT_REMOVED",
        "operationId": "update_user_preferences_api_ai_preferences_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPreferenceUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPreferenceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/ai/personalize": {
      "post": {
        "tags": [
          "AI Recommendation",
          "AI Recommendation"
        ],
        "summary": "Get Personalized Content",
        "description": "�KOREAN_TEXT_REMOVED�KOREAN_TEXT_REMOVED�KOREAN_TEXT_REMOVED�KOREAN_TEXT_REMOVED",
        "operationId": "get_personalized_content_api_ai_personalize_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonalizationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonalizationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/ai/predictions": {
      "get": {
        "tags": [
          "AI Recommendation",
          "AI Recommendation"
        ],
        "summary": "Get User Predictions",
        "description": "KOREAN_TEXT_REMOVED�KOREAN_TEXT_REMOVEDAI KOREAN_TEXT_REMOVED�KOREAN_TEXT_REMOVED �KOREAN_TEXT_REMOVED �KOREAN_TEXT_REMOVED",
        "operationId": "get_user_predictions_api_ai_predictions_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "prediction_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Prediction Type"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModelPredictionResponse"
                  },
                  "title": "Response Get User Predictions Api Ai Predictions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ai/recommendations/stats": {
      "get": {
        "tags": [
          "AI Recommendation",
          "AI Recommendation"
        ],
        "summary": "Get Recommendation Stats",
        "description": "�KOREAN_TEXT_REMOVED KOREAN_TEXT_REMOVED�KOREAN_TEXT_REMOVED�KOREAN_TEXT_REMOVED",
        "operationId": "get_recommendation_stats_api_ai_recommendations_stats_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 1,
              "default": 30,
              "title": "Days"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Recommendation Stats Api Ai Recommendations Stats Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ai/feedback": {
      "post": {
        "tags": [
          "AI Recommendation",
          "AI Recommendation"
        ],
        "summary": "Submit Ai Feedback",
        "description": "AI �KOREAN_TEXT_REMOVED�KOREAN_TEXT_REMOVED�KOREAN_TEXT_REMOVED�KOREAN_TEXT_REMOVED�KOREAN_TEXT_REMOVED",
        "operationId": "submit_ai_feedback_api_ai_feedback_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "recommendation_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Recommendation Id"
            }
          },
          {
            "name": "feedback",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^(helpful|not_helpful|irrelevant)$",
              "title": "Feedback"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Submit Ai Feedback Api Ai Feedback Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ai/learning-progress": {
      "get": {
        "tags": [
          "AI Recommendation",
          "AI Recommendation"
        ],
        "summary": "Get Learning Progress",
        "description": "AI KOREAN_TEXT_REMOVED�KOREAN_TEXT_REMOVED �KOREAN_TEXT_REMOVED KOREAN_TEXT_REMOVED�KOREAN_TEXT_REMOVED",
        "operationId": "get_learning_progress_api_ai_learning_progress_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Learning Progress Api Ai Learning Progress Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/dashboard/main": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get Main Dashboard",
        "description": "Get main dashboard statistics.",
        "operationId": "get_main_dashboard_dashboard_main_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/dashboard/games": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get Games Dashboard",
        "description": "Get game-specific dashboard statistics.",
        "operationId": "get_games_dashboard_dashboard_games_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/dashboard/social-proof": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get Social Proof",
        "description": "Get statistics for social proof widgets.\nThis endpoint is not protected by admin auth to be publicly available.",
        "operationId": "get_social_proof_dashboard_social_proof_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/doc-titles/docs/titles": {
      "get": {
        "tags": [
          "Document Titles",
          "Document Titles"
        ],
        "summary": "Get Docs Titles",
        "description": "Return document names and their H1-H3 titles from the docs folder.",
        "operationId": "get_docs_titles_api_doc_titles_docs_titles_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {},
                  "type": "array",
                  "title": "Response Get Docs Titles Api Doc Titles Docs Titles Get"
                }
              }
            }
          }
        }
      }
    },
    "/feedback/emotion_based": {
      "post": {
        "tags": [
          "Feedback",
          "Feedback"
        ],
        "summary": "Get Personalized Emotion-Based Feedback",
        "operationId": "get_emotion_based_feedback_endpoint_feedback_emotion_based_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmotionFeedbackRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/FeedbackResponse"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Get Emotion Based Feedback Endpoint Feedback Emotion Based Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/feedback/generate": {
      "post": {
        "tags": [
          "Feedback",
          "Feedback"
        ],
        "summary": "Generate Feedback",
        "description": "Generate emotion-based feedback for user\n\nArgs:\n    request: Feedback request data\n        - user_id: User ID\n        - emotion: Emotion state\n        - segment: User segment\n        - context: Additional context information\n\nReturns:\n    Feedback response object",
        "operationId": "generate_feedback_feedback_generate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/games/": {
      "get": {
        "tags": [
          "Game Collection",
          "Games"
        ],
        "summary": "Get Games List",
        "description": "게임 목록 조회 (직접 JSON 반환)",
        "operationId": "get_games_list_api_games__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/games/slot/spin": {
      "post": {
        "tags": [
          "Game Collection",
          "Games"
        ],
        "summary": "Spin Slot",
        "description": "슬롯머신 스핀",
        "operationId": "spin_slot_api_games_slot_spin_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotSpinRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/games/rps/play": {
      "post": {
        "tags": [
          "Game Collection",
          "Games"
        ],
        "summary": "Play Rps",
        "description": "가위바위보 플레이",
        "operationId": "games_rps_play_v1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RPSPlayRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RPSPlayResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/games/gacha/pull": {
      "post": {
        "tags": [
          "Game Collection",
          "Games"
        ],
        "summary": "Pull Gacha",
        "description": "가챠 뽑기",
        "operationId": "pull_gacha_api_games_gacha_pull_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GachaPullRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GachaPullResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/games/crash/bet": {
      "post": {
        "tags": [
          "Game Collection",
          "Games"
        ],
        "summary": "Place Crash Bet",
        "description": "크래시 게임 베팅",
        "operationId": "place_crash_bet_api_games_crash_bet_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrashBetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CrashBetResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/games/crash/cashout": {
      "post": {
        "tags": [
          "Game Collection",
          "Games"
        ],
        "summary": "Cashout Crash",
        "description": "크래시 게임 캐시아웃 처리 (단순 시뮬레이션)\n- 프론트엔드에서 gameId만 전달하므로, 간단히 임의의 승리 금액을 산출하고 잔액에 반영\n- 실제 구현에서는 진행 중인 게임 상태를 추적하여 정확한 배율과 금액을 계산해야 함",
        "operationId": "cashout_crash_api_games_crash_cashout_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrashCashoutRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CrashCashoutResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/games/stats/{user_id}": {
      "get": {
        "tags": [
          "Game Collection",
          "Games"
        ],
        "summary": "Get Game Stats",
        "description": "사용자 전체 게임 통계 (슬롯/룰렛/가챠 등)",
        "operationId": "get_game_stats_api_games_stats__user_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameStats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/games/profile/{user_id}/stats": {
      "get": {
        "tags": [
          "Game Collection",
          "Games"
        ],
        "summary": "Get Profile Game Stats",
        "description": "프로필용 상세 게임 통계",
        "operationId": "get_profile_game_stats_api_games_profile__user_id__stats_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileGameStats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/games/leaderboard": {
      "get": {
        "tags": [
          "Game Collection",
          "Games"
        ],
        "summary": "Get Game Leaderboard",
        "description": "게임별 또는 전체 리더보드",
        "operationId": "get_game_leaderboard_api_games_leaderboard_get",
        "parameters": [
          {
            "name": "game_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Game Type"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GameLeaderboard"
                  },
                  "title": "Response Get Game Leaderboard Api Games Leaderboard Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/games/achievements/{user_id}": {
      "get": {
        "tags": [
          "Game Collection",
          "Games"
        ],
        "summary": "Get User Achievements",
        "description": "사용자 업적 목록 (기본 예시)",
        "operationId": "get_user_achievements_api_games_achievements__user_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Achievement"
                  },
                  "title": "Response Get User Achievements Api Games Achievements  User Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/games/session/start": {
      "post": {
        "tags": [
          "Game Collection",
          "Games"
        ],
        "summary": "Start Game Session",
        "description": "게임 세션 시작",
        "operationId": "start_game_session_api_games_session_start_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "game_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Game Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameSession"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/games/session/end": {
      "post": {
        "tags": [
          "Game Collection",
          "Games"
        ],
        "summary": "End Game Session",
        "description": "게임 세션 종료",
        "operationId": "end_game_session_api_games_session_end_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/invite/generate": {
      "post": {
        "tags": [
          "Invite Codes"
        ],
        "summary": "Create Invite Code",
        "description": "Generate a new invite code\nOnly admin users can generate invite codes",
        "operationId": "create_invite_code_api_invite_generate_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "expires_in_days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 30,
              "title": "Expires In Days"
            }
          },
          {
            "name": "max_uses",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Max Uses"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InviteCodeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/invite/validate": {
      "post": {
        "tags": [
          "Invite Codes"
        ],
        "summary": "Validate Invite Code",
        "description": "Validate an invite code\nReturns validation status and code details",
        "operationId": "validate_invite_code_api_invite_validate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateInviteCodeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateInviteCodeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/invite/codes": {
      "get": {
        "tags": [
          "Invite Codes"
        ],
        "summary": "List Invite Codes",
        "description": "List all invite codes created by the current user\nAdmin users can see all codes",
        "operationId": "list_invite_codes_api_invite_codes_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/InviteCodeResponse"
                  },
                  "type": "array",
                  "title": "Response List Invite Codes Api Invite Codes Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/invite/codes/{code}/deactivate": {
      "patch": {
        "tags": [
          "Invite Codes"
        ],
        "summary": "Deactivate Invite Code",
        "description": "Deactivate an invite code\nOnly the creator or admin can deactivate",
        "operationId": "deactivate_invite_code_api_invite_codes__code__deactivate_patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Code"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/invite/stats": {
      "get": {
        "tags": [
          "Invite Codes"
        ],
        "summary": "Get Invite Stats",
        "description": "Get invite code statistics\nShows usage metrics for the current user's codes",
        "operationId": "get_invite_stats_api_invite_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/analytics/dashboard/summary": {
      "get": {
        "tags": [
          "Analytics",
          "analytics"
        ],
        "summary": "Get Dashboard Summary",
        "description": "Get basic dashboard summary with key metrics",
        "operationId": "get_dashboard_summary_api_analytics_dashboard_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/analytics/users/activity": {
      "get": {
        "tags": [
          "Analytics",
          "analytics"
        ],
        "summary": "Get User Activity",
        "description": "Get user activity analytics for the specified period",
        "operationId": "get_user_activity_api_analytics_users_activity_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of days to analyze",
              "default": 7,
              "title": "Days"
            },
            "description": "Number of days to analyze"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/games/stats": {
      "get": {
        "tags": [
          "Analytics",
          "analytics"
        ],
        "summary": "Get Game Statistics",
        "description": "Get game performance statistics",
        "operationId": "get_game_statistics_api_analytics_games_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/segments/user/{user_id}": {
      "get": {
        "tags": [
          "Segments"
        ],
        "summary": "Get User Segment",
        "description": "Get segmentation information for a specific user\nReturns RFM group, LTV score, and risk profile",
        "operationId": "get_user_segment_api_segments_user__user_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSegmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/segments/list": {
      "get": {
        "tags": [
          "Segments"
        ],
        "summary": "List All Segments",
        "description": "Get statistics for all user segments\nAdmin only endpoint for business intelligence",
        "operationId": "list_all_segments_api_segments_list_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SegmentStatsResponse"
                  },
                  "type": "array",
                  "title": "Response List All Segments Api Segments List Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/segments/update": {
      "put": {
        "tags": [
          "Segments"
        ],
        "summary": "Update User Segment",
        "description": "Update user segment information\nAdmin only endpoint for manual segment adjustments",
        "operationId": "update_user_segment_api_segments_update_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSegmentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSegmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/segments/calculate-rfm": {
      "post": {
        "tags": [
          "Segments"
        ],
        "summary": "Calculate Rfm Segments",
        "description": "Recalculate RFM segments for all users\nAdmin only endpoint for batch segment updates",
        "operationId": "calculate_rfm_segments_api_segments_calculate_rfm_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of days to analyze for RFM calculation",
              "default": 90,
              "title": "Days"
            },
            "description": "Number of days to analyze for RFM calculation"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/segments/distribution": {
      "get": {
        "tags": [
          "Segments"
        ],
        "summary": "Get Segment Distribution",
        "description": "Get distribution of users across different segments\nReturns percentage breakdown and counts",
        "operationId": "get_segment_distribution_api_segments_distribution_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/tracking/site-visit": {
      "post": {
        "tags": [
          "Tracking",
          "tracking"
        ],
        "summary": "Log Site Visit Endpoint",
        "description": "Logs a visit to an external corporate site or other tracked action.",
        "operationId": "log_site_visit_endpoint_tracking_site_visit_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteVisitCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteVisitResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/unlock/unlock": {
      "get": {
        "tags": [
          "Unlock",
          "Unlock",
          "unlock",
          "content"
        ],
        "summary": "Attempt Content Unlock",
        "operationId": "attempt_content_unlock_api_unlock_unlock_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the user attempting to unlock content",
              "title": "User Id"
            },
            "description": "ID of the user attempting to unlock content"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnlockResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/events/": {
      "get": {
        "tags": [
          "Events & Missions"
        ],
        "summary": "Get Active Events",
        "description": "활성 이벤트 목록 조회",
        "operationId": "get_active_events_api_events__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EventResponse"
                  },
                  "type": "array",
                  "title": "Response Get Active Events Api Events  Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/events/{event_id}": {
      "get": {
        "tags": [
          "Events & Missions"
        ],
        "summary": "Get Event Detail",
        "description": "이벤트 상세 조회",
        "operationId": "get_event_detail_api_events__event_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/events/join": {
      "post": {
        "tags": [
          "Events & Missions"
        ],
        "summary": "Join Event",
        "description": "이벤트 참여",
        "operationId": "join_event_api_events_join_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventJoin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventParticipationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/events/progress/{event_id}": {
      "put": {
        "tags": [
          "Events & Missions"
        ],
        "summary": "Update Event Progress",
        "description": "이벤트 진행 상황 업데이트",
        "operationId": "update_event_progress_api_events_progress__event_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventProgressUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventParticipationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/events/claim/{event_id}": {
      "post": {
        "tags": [
          "Events & Missions"
        ],
        "summary": "Claim Event Rewards",
        "description": "이벤트 보상 수령",
        "operationId": "claim_event_rewards_api_events_claim__event_id__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimRewardResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/events/missions/daily": {
      "get": {
        "tags": [
          "Events & Missions"
        ],
        "summary": "Get Daily Missions",
        "description": "일일 미션 목록 조회",
        "operationId": "get_daily_missions_api_events_missions_daily_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserMissionResponse"
                  },
                  "type": "array",
                  "title": "Response Get Daily Missions Api Events Missions Daily Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/events/missions/weekly": {
      "get": {
        "tags": [
          "Events & Missions"
        ],
        "summary": "Get Weekly Missions",
        "description": "주간 미션 목록 조회",
        "operationId": "get_weekly_missions_api_events_missions_weekly_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserMissionResponse"
                  },
                  "type": "array",
                  "title": "Response Get Weekly Missions Api Events Missions Weekly Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/events/missions/all": {
      "get": {
        "tags": [
          "Events & Missions"
        ],
        "summary": "Get All Missions",
        "description": "모든 미션 목록 조회",
        "operationId": "get_all_missions_api_events_missions_all_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserMissionResponse"
                  },
                  "type": "array",
                  "title": "Response Get All Missions Api Events Missions All Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/events/missions/progress": {
      "put": {
        "tags": [
          "Events & Missions"
        ],
        "summary": "Update Mission Progress",
        "description": "미션 진행 상황 업데이트",
        "operationId": "update_mission_progress_api_events_missions_progress_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserMissionProgress"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Update Mission Progress Api Events Missions Progress Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/events/missions/claim/{mission_id}": {
      "post": {
        "tags": [
          "Events & Missions"
        ],
        "summary": "Claim Mission Rewards",
        "description": "미션 보상 수령",
        "operationId": "claim_mission_rewards_api_events_missions_claim__mission_id__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "mission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Mission Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimRewardResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "Root"
        ],
        "summary": "Root",
        "description": "Root endpoint",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Health Check",
        "description": "Health check endpoint",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api": {
      "get": {
        "tags": [
          "API Info"
        ],
        "summary": "Api Info",
        "description": "API information endpoint",
        "operationId": "api_info_api_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Achievement": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "badge_icon": {
            "type": "string",
            "title": "Badge Icon"
          },
          "badge_color": {
            "type": "string",
            "title": "Badge Color"
          },
          "achieved_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Achieved At"
          },
          "progress": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Progress"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "badge_icon",
          "badge_color"
        ],
        "title": "Achievement",
        "description": "사용자 업적"
      },
      "ActivateRequest": {
        "properties": {
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          }
        },
        "type": "object",
        "title": "ActivateRequest"
      },
      "AdminLogin": {
        "properties": {
          "site_id": {
            "type": "string",
            "title": "Site Id",
            "description": "관리자 사이트 아이디"
          },
          "password": {
            "type": "string",
            "title": "Password",
            "description": "관리자 비밀번호"
          }
        },
        "type": "object",
        "required": [
          "site_id",
          "password"
        ],
        "title": "AdminLogin",
        "description": "관리자 로그인 스키마",
        "example": {
          "password": "admin123",
          "site_id": "admin"
        }
      },
      "AdminNotificationRequest": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "body": {
            "type": "string",
            "title": "Body"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "title",
          "body"
        ],
        "title": "AdminNotificationRequest",
        "description": "Payload to send an admin notification"
      },
      "AdminStatsResponse": {
        "properties": {
          "total_users": {
            "type": "integer",
            "title": "Total Users"
          },
          "active_users": {
            "type": "integer",
            "title": "Active Users"
          },
          "total_games_played": {
            "type": "integer",
            "title": "Total Games Played"
          },
          "total_tokens_in_circulation": {
            "type": "integer",
            "title": "Total Tokens In Circulation"
          }
        },
        "type": "object",
        "required": [
          "total_users",
          "active_users",
          "total_games_played",
          "total_tokens_in_circulation"
        ],
        "title": "AdminStatsResponse",
        "description": "Admin statistics response"
      },
      "AdminUserDetailResponse": {
        "properties": {
          "user": {
            "type": "object",
            "title": "User"
          },
          "balances": {
            "type": "object",
            "title": "Balances"
          },
          "flags": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Flags",
            "default": []
          },
          "recent": {
            "type": "object",
            "title": "Recent",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "user",
          "balances"
        ],
        "title": "AdminUserDetailResponse"
      },
      "AdminUserListResponse": {
        "properties": {
          "items": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Items"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "page_size",
          "total"
        ],
        "title": "AdminUserListResponse"
      },
      "AnswerRequest": {
        "properties": {
          "answers": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Answers"
          }
        },
        "type": "object",
        "required": [
          "answers"
        ],
        "title": "AnswerRequest"
      },
      "Body_refresh_api_auth_refresh_post": {
        "properties": {
          "refresh_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Token"
          }
        },
        "type": "object",
        "title": "Body_refresh_api_auth_refresh_post"
      },
      "BulkRewardItem": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "reward_type": {
            "type": "string",
            "title": "Reward Type"
          },
          "amount": {
            "type": "integer",
            "title": "Amount"
          },
          "source_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Description"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "reward_type",
          "amount"
        ],
        "title": "BulkRewardItem"
      },
      "BulkRewardRequest": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/BulkRewardItem"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "BulkRewardRequest"
      },
      "BulkRewardResult": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "results": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": [
          "success",
          "results"
        ],
        "title": "BulkRewardResult"
      },
      "ClaimRewardResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "rewards": {
            "type": "object",
            "title": "Rewards"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "success",
          "rewards",
          "message"
        ],
        "title": "ClaimRewardResponse"
      },
      "CrashBetRequest": {
        "properties": {
          "betAmount": {
            "type": "integer",
            "title": "Betamount"
          },
          "autoCashout": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Autocashout"
          }
        },
        "type": "object",
        "required": [
          "betAmount"
        ],
        "title": "CrashBetRequest",
        "description": "크래시 게임 베팅 요청 모델"
      },
      "CrashBetResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "game_id": {
            "type": "string",
            "title": "Game Id"
          },
          "bet_amount": {
            "type": "integer",
            "title": "Bet Amount"
          },
          "potential_win": {
            "type": "integer",
            "title": "Potential Win"
          },
          "max_multiplier": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Multiplier"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "balance": {
            "type": "integer",
            "title": "Balance"
          }
        },
        "type": "object",
        "required": [
          "success",
          "game_id",
          "bet_amount",
          "potential_win",
          "message",
          "balance"
        ],
        "title": "CrashBetResponse",
        "description": "크래시 게임 베팅 응답 모델"
      },
      "CrashCashoutRequest": {
        "properties": {
          "gameId": {
            "type": "string",
            "title": "Gameid"
          }
        },
        "type": "object",
        "required": [
          "gameId"
        ],
        "title": "CrashCashoutRequest",
        "description": "크래시 게임 캐시아웃 요청 모델"
      },
      "CrashCashoutResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "game_id": {
            "type": "string",
            "title": "Game Id"
          },
          "cashed_out_at": {
            "type": "string",
            "format": "date-time",
            "title": "Cashed Out At"
          },
          "win_amount": {
            "type": "integer",
            "title": "Win Amount"
          },
          "balance": {
            "type": "integer",
            "title": "Balance"
          }
        },
        "type": "object",
        "required": [
          "success",
          "game_id",
          "cashed_out_at",
          "win_amount",
          "balance"
        ],
        "title": "CrashCashoutResponse",
        "description": "크래시 게임 캐시아웃 응답 모델"
      },
      "EmotionFeedbackRequest": {
        "properties": {
          "emotion_result_data": {
            "type": "object",
            "title": "Emotion Result Data",
            "description": "EmotionResult as dict."
          },
          "user_segment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Segment",
            "default": "GENERAL"
          },
          "mission_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mission Type",
            "default": "GENERAL"
          },
          "context_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context Text"
          }
        },
        "type": "object",
        "required": [
          "emotion_result_data"
        ],
        "title": "EmotionFeedbackRequest"
      },
      "EventCreate": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "event_type": {
            "type": "string",
            "title": "Event Type"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "title": "End Date"
          },
          "rewards": {
            "type": "object",
            "title": "Rewards"
          },
          "requirements": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requirements",
            "default": {}
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "title",
          "event_type",
          "start_date",
          "end_date",
          "rewards"
        ],
        "title": "EventCreate"
      },
      "EventJoin": {
        "properties": {
          "event_id": {
            "type": "integer",
            "title": "Event Id"
          }
        },
        "type": "object",
        "required": [
          "event_id"
        ],
        "title": "EventJoin"
      },
      "EventParticipationResponse": {
        "properties": {
          "event_id": {
            "type": "integer",
            "title": "Event Id"
          },
          "progress": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Progress",
            "default": {}
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "completed": {
            "type": "boolean",
            "title": "Completed"
          },
          "claimed_rewards": {
            "type": "boolean",
            "title": "Claimed Rewards"
          },
          "joined_at": {
            "type": "string",
            "format": "date-time",
            "title": "Joined At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "event": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EventResponse"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "event_id",
          "id",
          "user_id",
          "completed",
          "claimed_rewards",
          "joined_at"
        ],
        "title": "EventParticipationResponse"
      },
      "EventProgressUpdate": {
        "properties": {
          "progress": {
            "type": "object",
            "title": "Progress"
          }
        },
        "type": "object",
        "required": [
          "progress"
        ],
        "title": "EventProgressUpdate"
      },
      "EventResponse": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "event_type": {
            "type": "string",
            "title": "Event Type"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "title": "End Date"
          },
          "rewards": {
            "type": "object",
            "title": "Rewards"
          },
          "requirements": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requirements",
            "default": {}
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "default": 0
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "participation_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Participation Count",
            "default": 0
          },
          "user_participation": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Participation"
          }
        },
        "type": "object",
        "required": [
          "title",
          "event_type",
          "start_date",
          "end_date",
          "rewards",
          "id",
          "is_active",
          "created_at"
        ],
        "title": "EventResponse"
      },
      "EventUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "rewards": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rewards"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "EventUpdate"
      },
      "FeedbackResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "animation_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Animation Key"
          },
          "sound_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sound Key"
          },
          "intensity": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Intensity"
          },
          "color_scheme": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color Scheme"
          },
          "bonus_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bonus Tokens"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "FeedbackResponse"
      },
      "GachaPullRequest": {
        "properties": {
          "gachaId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gachaid",
            "default": "default"
          },
          "pullCount": {
            "type": "integer",
            "title": "Pullcount",
            "default": 1
          },
          "usePremiumCurrency": {
            "type": "boolean",
            "title": "Usepremiumcurrency",
            "default": false
          }
        },
        "type": "object",
        "title": "GachaPullRequest",
        "description": "가챠 뽑기 요청 모델"
      },
      "GachaPullResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "items": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Items"
          },
          "rare_item_count": {
            "type": "integer",
            "title": "Rare Item Count",
            "default": 0
          },
          "ultra_rare_item_count": {
            "type": "integer",
            "title": "Ultra Rare Item Count",
            "default": 0
          },
          "special_animation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Special Animation"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "currency_balance": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Currency Balance"
          }
        },
        "type": "object",
        "required": [
          "success",
          "items",
          "message",
          "currency_balance"
        ],
        "title": "GachaPullResponse",
        "description": "가챠 뽑기 응답 모델"
      },
      "GameLeaderboard": {
        "properties": {
          "game_type": {
            "type": "string",
            "title": "Game Type"
          },
          "period": {
            "type": "string",
            "title": "Period"
          },
          "entries": {
            "items": {
              "$ref": "#/components/schemas/LeaderboardEntry"
            },
            "type": "array",
            "title": "Entries",
            "default": []
          },
          "user_rank": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Rank"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "game_type",
          "period",
          "updated_at"
        ],
        "title": "GameLeaderboard",
        "description": "게임 리더보드 응답"
      },
      "GameSession": {
        "properties": {
          "session_id": {
            "type": "string",
            "title": "Session Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "game_type": {
            "type": "string",
            "title": "Game Type"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "duration": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration"
          },
          "current_bet": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Bet",
            "default": 0
          },
          "current_round": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Round",
            "default": 0
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "active"
          }
        },
        "type": "object",
        "required": [
          "session_id",
          "user_id",
          "game_type",
          "start_time"
        ],
        "title": "GameSession",
        "description": "게임 세션 모델"
      },
      "GameStats": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "total_spins": {
            "type": "integer",
            "title": "Total Spins",
            "default": 0
          },
          "total_coins_won": {
            "type": "integer",
            "title": "Total Coins Won",
            "default": 0
          },
          "total_gems_won": {
            "type": "integer",
            "title": "Total Gems Won",
            "default": 0
          },
          "special_items_won": {
            "type": "integer",
            "title": "Special Items Won",
            "default": 0
          },
          "jackpots_won": {
            "type": "integer",
            "title": "Jackpots Won",
            "default": 0
          },
          "bonus_spins_won": {
            "type": "integer",
            "title": "Bonus Spins Won",
            "default": 0
          },
          "best_streak": {
            "type": "integer",
            "title": "Best Streak",
            "default": 0
          },
          "current_streak": {
            "type": "integer",
            "title": "Current Streak",
            "default": 0
          },
          "last_spin_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Spin Date"
          }
        },
        "type": "object",
        "required": [
          "user_id"
        ],
        "title": "GameStats",
        "description": "사용자 게임 통계 모델"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HealthResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "version": {
            "type": "string",
            "title": "Version"
          }
        },
        "type": "object",
        "required": [
          "status",
          "timestamp",
          "version"
        ],
        "title": "HealthResponse"
      },
      "InteractionType": {
        "type": "string",
        "enum": [
          "view",
          "click",
          "dismiss",
          "complete"
        ],
        "title": "InteractionType"
      },
      "InviteCodeResponse": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "max_uses": {
            "type": "integer",
            "title": "Max Uses",
            "default": 1
          },
          "used_count": {
            "type": "integer",
            "title": "Used Count",
            "default": 0
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "code",
          "created_at"
        ],
        "title": "InviteCodeResponse"
      },
      "LeaderboardEntry": {
        "properties": {
          "rank": {
            "type": "integer",
            "title": "Rank"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "nickname": {
            "type": "string",
            "title": "Nickname"
          },
          "score": {
            "type": "integer",
            "title": "Score"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          }
        },
        "type": "object",
        "required": [
          "rank",
          "user_id",
          "nickname",
          "score"
        ],
        "title": "LeaderboardEntry",
        "description": "리더보드 항목"
      },
      "MissionCreate": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "mission_type": {
            "type": "string",
            "title": "Mission Type"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "target_value": {
            "type": "integer",
            "title": "Target Value"
          },
          "target_type": {
            "type": "string",
            "title": "Target Type"
          },
          "rewards": {
            "type": "object",
            "title": "Rewards"
          },
          "requirements": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requirements",
            "default": {}
          },
          "reset_period": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reset Period"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          }
        },
        "type": "object",
        "required": [
          "title",
          "mission_type",
          "target_value",
          "target_type",
          "rewards"
        ],
        "title": "MissionCreate"
      },
      "MissionResponse": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "mission_type": {
            "type": "string",
            "title": "Mission Type"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "target_value": {
            "type": "integer",
            "title": "Target Value"
          },
          "target_type": {
            "type": "string",
            "title": "Target Type"
          },
          "rewards": {
            "type": "object",
            "title": "Rewards"
          },
          "requirements": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requirements",
            "default": {}
          },
          "reset_period": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reset Period"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "sort_order": {
            "type": "integer",
            "title": "Sort Order"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "user_progress": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Progress"
          }
        },
        "type": "object",
        "required": [
          "title",
          "mission_type",
          "target_value",
          "target_type",
          "rewards",
          "id",
          "is_active",
          "sort_order",
          "created_at"
        ],
        "title": "MissionResponse"
      },
      "MissionUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "target_value": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Value"
          },
          "rewards": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rewards"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "MissionUpdate"
      },
      "ModelPredictionResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "model_id": {
            "type": "integer",
            "title": "Model Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "prediction_type": {
            "type": "string",
            "title": "Prediction Type"
          },
          "input_features": {
            "type": "object",
            "title": "Input Features",
            "default": {}
          },
          "prediction_result": {
            "type": "object",
            "title": "Prediction Result",
            "default": {}
          },
          "confidence_score": {
            "type": "number",
            "title": "Confidence Score",
            "default": 0.5
          },
          "actual_result": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual Result"
          },
          "is_correct": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Correct"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "validated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "model_id",
          "user_id",
          "prediction_type",
          "created_at"
        ],
        "title": "ModelPredictionResponse"
      },
      "PaginatedRewardsResponse": {
        "properties": {
          "rewards": {
            "items": {
              "$ref": "#/components/schemas/RewardItem"
            },
            "type": "array",
            "title": "Rewards"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size"
          },
          "total_rewards": {
            "type": "integer",
            "title": "Total Rewards"
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages"
          }
        },
        "type": "object",
        "required": [
          "rewards",
          "page",
          "page_size",
          "total_rewards",
          "total_pages"
        ],
        "title": "PaginatedRewardsResponse"
      },
      "PersonalizationRequest": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "content_type": {
            "type": "string",
            "title": "Content Type"
          },
          "context_data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context Data"
          },
          "max_recommendations": {
            "type": "integer",
            "maximum": 20.0,
            "minimum": 1.0,
            "title": "Max Recommendations",
            "default": 5
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "content_type"
        ],
        "title": "PersonalizationRequest"
      },
      "PersonalizationResponse": {
        "properties": {
          "recommendations": {
            "items": {
              "$ref": "#/components/schemas/UserRecommendationResponse"
            },
            "type": "array",
            "title": "Recommendations"
          },
          "personalization_factors": {
            "type": "object",
            "title": "Personalization Factors"
          },
          "confidence_score": {
            "type": "number",
            "title": "Confidence Score"
          },
          "algorithm_version": {
            "type": "string",
            "title": "Algorithm Version"
          },
          "generated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Generated At"
          }
        },
        "type": "object",
        "required": [
          "recommendations",
          "personalization_factors",
          "confidence_score",
          "algorithm_version",
          "generated_at"
        ],
        "title": "PersonalizationResponse"
      },
      "ProfileGameStats": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "total_games_played": {
            "type": "integer",
            "title": "Total Games Played",
            "default": 0
          },
          "total_time_played": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Time Played"
          },
          "favorite_game": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Favorite Game"
          },
          "recent_activities": {
            "items": {
              "$ref": "#/components/schemas/UserGameActivity"
            },
            "type": "array",
            "title": "Recent Activities",
            "default": []
          },
          "achievements": {
            "items": {
              "$ref": "#/components/schemas/Achievement"
            },
            "type": "array",
            "title": "Achievements",
            "default": []
          },
          "current_session": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GameSession"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "user_id"
        ],
        "title": "ProfileGameStats",
        "description": "프로필 게임 통계 응답"
      },
      "PublishRequest": {
        "properties": {
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          }
        },
        "type": "object",
        "title": "PublishRequest"
      },
      "RPSPlayRequest": {
        "properties": {
          "choice": {
            "type": "string",
            "title": "Choice"
          },
          "betAmount": {
            "type": "integer",
            "title": "Betamount"
          }
        },
        "type": "object",
        "required": [
          "choice",
          "betAmount"
        ],
        "title": "RPSPlayRequest",
        "description": "가위바위보 게임 요청 모델"
      },
      "RPSPlayResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "player_choice": {
            "type": "string",
            "title": "Player Choice"
          },
          "computer_choice": {
            "type": "string",
            "title": "Computer Choice"
          },
          "result": {
            "type": "string",
            "title": "Result"
          },
          "win_amount": {
            "type": "integer",
            "title": "Win Amount",
            "default": 0
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "balance": {
            "type": "integer",
            "title": "Balance"
          },
          "streak": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Streak"
          }
        },
        "type": "object",
        "required": [
          "success",
          "player_choice",
          "computer_choice",
          "result",
          "message",
          "balance"
        ],
        "title": "RPSPlayResponse",
        "description": "가위바위보 게임 응답 모델"
      },
      "RecommendationInteractionCreate": {
        "properties": {
          "interaction_type": {
            "$ref": "#/components/schemas/InteractionType"
          },
          "interaction_data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interaction Data"
          },
          "duration": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration"
          },
          "result_data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result Data"
          }
        },
        "type": "object",
        "required": [
          "interaction_type"
        ],
        "title": "RecommendationInteractionCreate"
      },
      "RecommendationInteractionResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "recommendation_id": {
            "type": "integer",
            "title": "Recommendation Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "interaction_type": {
            "$ref": "#/components/schemas/InteractionType"
          },
          "interaction_data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interaction Data"
          },
          "duration": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration"
          },
          "result_data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result Data"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "recommendation_id",
          "user_id",
          "interaction_type",
          "created_at"
        ],
        "title": "RecommendationInteractionResponse"
      },
      "RecommendationStatus": {
        "type": "string",
        "enum": [
          "pending",
          "shown",
          "clicked",
          "dismissed",
          "expired"
        ],
        "title": "RecommendationStatus"
      },
      "RecommendationType": {
        "type": "string",
        "enum": [
          "game",
          "reward",
          "mission",
          "content"
        ],
        "title": "RecommendationType"
      },
      "RewardDistributionRequest": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "reward_type": {
            "type": "string",
            "title": "Reward Type"
          },
          "amount": {
            "type": "integer",
            "title": "Amount"
          },
          "source_description": {
            "type": "string",
            "title": "Source Description"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "reward_type",
          "amount",
          "source_description"
        ],
        "title": "RewardDistributionRequest"
      },
      "RewardItem": {
        "properties": {
          "reward_id": {
            "type": "integer",
            "title": "Reward Id"
          },
          "reward_type": {
            "type": "string",
            "title": "Reward Type"
          },
          "reward_value": {
            "type": "string",
            "title": "Reward Value"
          },
          "awarded_at": {
            "type": "string",
            "format": "date-time",
            "title": "Awarded At"
          }
        },
        "type": "object",
        "required": [
          "reward_id",
          "reward_type",
          "reward_value",
          "awarded_at"
        ],
        "title": "RewardItem"
      },
      "SegmentStatsResponse": {
        "properties": {
          "segment_name": {
            "type": "string",
            "title": "Segment Name"
          },
          "user_count": {
            "type": "integer",
            "title": "User Count"
          },
          "avg_ltv": {
            "type": "number",
            "title": "Avg Ltv"
          },
          "activity_level": {
            "type": "string",
            "title": "Activity Level"
          }
        },
        "type": "object",
        "required": [
          "segment_name",
          "user_count",
          "avg_ltv",
          "activity_level"
        ],
        "title": "SegmentStatsResponse"
      },
      "ShopPurchaseRequest": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "item_id": {
            "type": "integer",
            "title": "Item Id"
          },
          "item_name": {
            "type": "string",
            "title": "Item Name"
          },
          "price": {
            "type": "integer",
            "title": "Price"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "item_id",
          "item_name",
          "price"
        ],
        "title": "ShopPurchaseRequest"
      },
      "ShopPurchaseResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "new_gold_balance": {
            "type": "integer",
            "title": "New Gold Balance"
          },
          "item_id": {
            "type": "integer",
            "title": "Item Id"
          },
          "item_name": {
            "type": "string",
            "title": "Item Name"
          },
          "new_item_count": {
            "type": "integer",
            "title": "New Item Count"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "new_gold_balance",
          "item_id",
          "item_name",
          "new_item_count"
        ],
        "title": "ShopPurchaseResponse"
      },
      "SiteVisitCreate": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "source": {
            "type": "string",
            "title": "Source"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "source"
        ],
        "title": "SiteVisitCreate"
      },
      "SiteVisitResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "source": {
            "type": "string",
            "title": "Source"
          },
          "visit_timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Visit Timestamp"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "source",
          "visit_timestamp"
        ],
        "title": "SiteVisitResponse"
      },
      "SlotSpinRequest": {
        "properties": {
          "betAmount": {
            "type": "integer",
            "title": "Betamount"
          },
          "lines": {
            "type": "integer",
            "title": "Lines",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "betAmount"
        ],
        "title": "SlotSpinRequest",
        "description": "슬롯 머신 스핀 요청 모델"
      },
      "Token": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          },
          "refresh_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Token"
          },
          "user": {
            "$ref": "#/components/schemas/app__schemas__auth__UserResponse"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "user"
        ],
        "title": "Token",
        "description": "토큰 응답 스키마"
      },
      "UnlockResponse": {
        "properties": {
          "stage": {
            "type": "integer",
            "title": "Stage"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "thumbnail_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thumbnail Url"
          },
          "media_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Media Url"
          }
        },
        "type": "object",
        "required": [
          "stage",
          "name",
          "description",
          "thumbnail_url",
          "media_url"
        ],
        "title": "UnlockResponse"
      },
      "UpdateSegmentRequest": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "rfm_group": {
            "type": "string",
            "title": "Rfm Group",
            "description": "RFM segment group"
          },
          "ltv_score": {
            "type": "number",
            "title": "Ltv Score",
            "description": "Lifetime value score",
            "default": 0.0
          },
          "risk_profile": {
            "type": "string",
            "title": "Risk Profile",
            "description": "Risk profile level",
            "default": "MEDIUM"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "rfm_group"
        ],
        "title": "UpdateSegmentRequest"
      },
      "UserBanRequest": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          },
          "duration_hours": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Hours"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "reason"
        ],
        "title": "UserBanRequest",
        "description": "User ban request"
      },
      "UserCreate": {
        "properties": {
          "site_id": {
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "title": "Site Id",
            "description": "사이트 아이디"
          },
          "nickname": {
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "title": "Nickname",
            "description": "닉네임"
          },
          "phone_number": {
            "type": "string",
            "maxLength": 15,
            "minLength": 10,
            "title": "Phone Number",
            "description": "전화번호"
          },
          "invite_code": {
            "type": "string",
            "title": "Invite Code",
            "description": "초대코드 (5858)"
          },
          "password": {
            "type": "string",
            "minLength": 4,
            "title": "Password",
            "description": "비밀번호생성"
          }
        },
        "type": "object",
        "required": [
          "site_id",
          "nickname",
          "phone_number",
          "invite_code",
          "password"
        ],
        "title": "UserCreate",
        "description": "사용자 생성 스키마 - 회원가입 필수 입력사항",
        "example": {
          "invite_code": "5858",
          "nickname": "테스터",
          "password": "1234",
          "phone_number": "01012345678",
          "site_id": "testuser123"
        }
      },
      "UserGameActivity": {
        "properties": {
          "game_type": {
            "type": "string",
            "title": "Game Type"
          },
          "total_rounds": {
            "type": "integer",
            "title": "Total Rounds",
            "default": 0
          },
          "total_wins": {
            "type": "integer",
            "title": "Total Wins",
            "default": 0
          },
          "total_losses": {
            "type": "integer",
            "title": "Total Losses",
            "default": 0
          },
          "win_rate": {
            "type": "number",
            "title": "Win Rate",
            "default": 0.0
          },
          "favorite": {
            "type": "boolean",
            "title": "Favorite",
            "default": false
          },
          "last_played": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Played"
          }
        },
        "type": "object",
        "required": [
          "game_type"
        ],
        "title": "UserGameActivity",
        "description": "사용자 게임 활동 요약"
      },
      "UserLogin": {
        "properties": {
          "site_id": {
            "type": "string",
            "title": "Site Id",
            "description": "사이트 아이디"
          },
          "password": {
            "type": "string",
            "title": "Password",
            "description": "비밀번호"
          }
        },
        "type": "object",
        "required": [
          "site_id",
          "password"
        ],
        "title": "UserLogin",
        "description": "사용자 로그인 스키마",
        "example": {
          "password": "password123",
          "site_id": "testuser123"
        }
      },
      "UserMissionProgress": {
        "properties": {
          "mission_id": {
            "type": "integer",
            "title": "Mission Id"
          },
          "progress_increment": {
            "type": "integer",
            "title": "Progress Increment"
          }
        },
        "type": "object",
        "required": [
          "mission_id",
          "progress_increment"
        ],
        "title": "UserMissionProgress"
      },
      "UserMissionResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "mission_id": {
            "type": "integer",
            "title": "Mission Id"
          },
          "current_progress": {
            "type": "integer",
            "title": "Current Progress"
          },
          "completed": {
            "type": "boolean",
            "title": "Completed"
          },
          "claimed": {
            "type": "boolean",
            "title": "Claimed"
          },
          "started_at": {
            "type": "string",
            "format": "date-time",
            "title": "Started At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "claimed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Claimed At"
          },
          "reset_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reset At"
          },
          "mission": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MissionResponse"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "mission_id",
          "current_progress",
          "completed",
          "claimed",
          "started_at"
        ],
        "title": "UserMissionResponse"
      },
      "UserPreferenceResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "preferred_games": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preferred Games"
          },
          "game_difficulty_preference": {
            "type": "string",
            "title": "Game Difficulty Preference",
            "default": "medium"
          },
          "risk_tolerance": {
            "type": "number",
            "title": "Risk Tolerance",
            "default": 0.5
          },
          "preferred_reward_types": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preferred Reward Types"
          },
          "spending_pattern": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Spending Pattern"
          },
          "active_hours": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active Hours"
          },
          "session_duration_preference": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Duration Preference"
          },
          "content_categories": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Categories"
          },
          "interaction_style": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interaction Style"
          },
          "learning_rate": {
            "type": "number",
            "title": "Learning Rate",
            "default": 0.1
          },
          "last_model_update": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Model Update"
          },
          "preference_accuracy": {
            "type": "number",
            "title": "Preference Accuracy",
            "default": 0.5
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "created_at",
          "updated_at"
        ],
        "title": "UserPreferenceResponse"
      },
      "UserPreferenceUpdate": {
        "properties": {
          "preferred_games": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preferred Games"
          },
          "game_difficulty_preference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Game Difficulty Preference"
          },
          "risk_tolerance": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Risk Tolerance"
          },
          "preferred_reward_types": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preferred Reward Types"
          },
          "spending_pattern": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Spending Pattern"
          },
          "active_hours": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active Hours"
          },
          "session_duration_preference": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Duration Preference"
          },
          "content_categories": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Categories"
          },
          "interaction_style": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interaction Style"
          }
        },
        "type": "object",
        "title": "UserPreferenceUpdate"
      },
      "UserProfileResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "site_id": {
            "type": "string",
            "title": "Site Id"
          },
          "nickname": {
            "type": "string",
            "title": "Nickname"
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number"
          },
          "cyber_token_balance": {
            "type": "integer",
            "title": "Cyber Token Balance"
          },
          "is_admin": {
            "type": "boolean",
            "title": "Is Admin"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          }
        },
        "type": "object",
        "required": [
          "id",
          "site_id",
          "nickname",
          "phone_number",
          "cyber_token_balance",
          "is_admin",
          "is_active"
        ],
        "title": "UserProfileResponse",
        "description": "User profile response"
      },
      "UserRecommendationResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "recommendation_type": {
            "$ref": "#/components/schemas/RecommendationType"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "content_data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Data"
          },
          "priority_score": {
            "type": "number",
            "title": "Priority Score",
            "default": 0.5
          },
          "confidence_score": {
            "type": "number",
            "title": "Confidence Score",
            "default": 0.5
          },
          "personalization_factors": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personalization Factors"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RecommendationStatus"
              }
            ],
            "default": "pending"
          },
          "shown_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shown At"
          },
          "clicked_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Clicked At"
          },
          "dismissed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dismissed At"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "source": {
            "type": "string",
            "title": "Source",
            "default": "ai_engine"
          },
          "algorithm_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Algorithm Version"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "recommendation_type",
          "title",
          "created_at"
        ],
        "title": "UserRecommendationResponse"
      },
      "UserSegmentResponse": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "rfm_group": {
            "type": "string",
            "title": "Rfm Group"
          },
          "ltv_score": {
            "type": "number",
            "title": "Ltv Score"
          },
          "risk_profile": {
            "type": "string",
            "title": "Risk Profile"
          },
          "last_updated": {
            "type": "string",
            "format": "date-time",
            "title": "Last Updated"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "rfm_group",
          "ltv_score",
          "risk_profile",
          "last_updated"
        ],
        "title": "UserSegmentResponse"
      },
      "UserStatsResponse": {
        "properties": {
          "total_games_played": {
            "type": "integer",
            "title": "Total Games Played"
          },
          "total_tokens_earned": {
            "type": "integer",
            "title": "Total Tokens Earned"
          },
          "total_tokens_spent": {
            "type": "integer",
            "title": "Total Tokens Spent"
          },
          "win_rate": {
            "type": "number",
            "title": "Win Rate"
          },
          "level": {
            "type": "integer",
            "title": "Level"
          },
          "experience": {
            "type": "integer",
            "title": "Experience"
          }
        },
        "type": "object",
        "required": [
          "total_games_played",
          "total_tokens_earned",
          "total_tokens_spent",
          "win_rate",
          "level",
          "experience"
        ],
        "title": "UserStatsResponse",
        "description": "User statistics response"
      },
      "UserUpdate": {
        "properties": {
          "nickname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nickname"
          },
          "phone_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "rank": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rank"
          }
        },
        "type": "object",
        "title": "UserUpdate"
      },
      "ValidateInviteCodeRequest": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          }
        },
        "type": "object",
        "required": [
          "code"
        ],
        "title": "ValidateInviteCodeRequest"
      },
      "ValidateInviteCodeResponse": {
        "properties": {
          "is_valid": {
            "type": "boolean",
            "title": "Is Valid"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "remaining_uses": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remaining Uses"
          }
        },
        "type": "object",
        "required": [
          "is_valid"
        ],
        "title": "ValidateInviteCodeResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "app__schemas__auth__UserResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "site_id": {
            "type": "string",
            "title": "Site Id"
          },
          "nickname": {
            "type": "string",
            "title": "Nickname"
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "is_admin": {
            "type": "boolean",
            "title": "Is Admin"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "last_login": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Login"
          }
        },
        "type": "object",
        "required": [
          "id",
          "site_id",
          "nickname",
          "phone_number",
          "is_active",
          "is_admin",
          "created_at"
        ],
        "title": "UserResponse",
        "description": "사용자 응답 스키마"
      },
      "app__schemas__user__UserResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "site_id": {
            "type": "string",
            "title": "Site Id"
          },
          "nickname": {
            "type": "string",
            "title": "Nickname"
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number"
          },
          "cyber_token_balance": {
            "type": "integer",
            "title": "Cyber Token Balance"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "is_admin": {
            "type": "boolean",
            "title": "Is Admin"
          },
          "rank": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rank",
            "default": "STANDARD"
          }
        },
        "type": "object",
        "required": [
          "id",
          "site_id",
          "nickname",
          "phone_number",
          "cyber_token_balance",
          "created_at",
          "is_active",
          "is_admin"
        ],
        "title": "UserResponse"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      },
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "api/auth/login"
          }
        }
      }
    }
  }
}