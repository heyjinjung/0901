# Render Prometheus rule templates with environment-driven thresholds
param()

$ErrorActionPreference = 'Stop'

$root = Split-Path -Parent $PSScriptRoot
$tmplPath = Join-Path $root 'cc-webapp/monitoring/purchase_alerts.tmpl.yml'
$outPath  = Join-Path $root 'cc-webapp/monitoring/purchase_alerts.yml'

if (-not (Test-Path $tmplPath)) {
    Write-Host "Template not found: $tmplPath" -ForegroundColor Yellow
    exit 0
}

# Resolve env with default
$pendingThreshold = $env:ALERT_PENDING_SPIKE_THRESHOLD
if ([string]::IsNullOrWhiteSpace($pendingThreshold)) { $pendingThreshold = '20' }

$content = Get-Content $tmplPath -Raw

# Very small templating: replace ${ALERT_PENDING_SPIKE_THRESHOLD:-20}
$content = $content -replace '\$\{ALERT_PENDING_SPIKE_THRESHOLD:-20\}', [string]$pendingThreshold

# Add header banner
$generated = @(
  '# This file is generated by scripts/render_prometheus_rules.ps1. Do not edit directly.',
  "# ALERT_PENDING_SPIKE_THRESHOLD=$pendingThreshold",
  $content
) -join "`n"

[System.IO.File]::WriteAllText($outPath, $generated, (New-Object System.Text.UTF8Encoding($false)))
Write-Host "Rendered Prometheus rules â†’ $outPath (ALERT_PENDING_SPIKE_THRESHOLD=$pendingThreshold)" -ForegroundColor Green
